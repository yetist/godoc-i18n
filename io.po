# Chinese translations for PACKAGE package
# PACKAGE 软件包的简体中文翻译.
# Copyright (C) 2015 THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# yetist <yetist@gmail.com>, 2015.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-11 17:06+0800\n"
"PO-Revision-Date: 2015-01-11 16:25+0800\n"
"Last-Translator: yetist <yetist@gmail.com>\n"
"Language-Team: Chinese (simplified)\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. used by: func Hi:
#: go1.3/io.go:1:3
msgid ""
"Copyright 2009 The Go Authors. All rights reserved."
"Use of this source code is governed by a BSD-style"
"license that can be found in the LICENSE file."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:5:8
msgid ""
"Package io provides basic interfaces to I/O primitives."
"Its primary job is to wrap existing implementations of such primitives,"
"such as those in package os, into shared public interfaces that"
"abstract the functionality, plus some other related primitives."
"\n"
"Because these interfaces and primitives wrap lower-level operations with"
"various implementations, unless otherwise informed clients should not"
"assume they are safe for parallel execution."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:19:2
msgid ""
"ErrShortWrite means that a write accepted fewer bytes than requested"
"but failed to return an explicit error."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:23:1
msgid ""
"ErrShortBuffer means that a read required a longer buffer than was provided."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:26:5
msgid ""
"EOF is the error returned by Read when no more input is available."
"Functions should return EOF only to signal a graceful end of input."
"If the EOF occurs unexpectedly in a structured data stream,"
"the appropriate error is either ErrUnexpectedEOF or some other error"
"giving more detail."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:33:2
msgid ""
"ErrUnexpectedEOF means that EOF was encountered in the"
"middle of reading a fixed-size block or data structure."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:37:3
msgid ""
"ErrNoProgress is returned by some clients of an io.Reader when"
"many calls to Read have failed to return any data or error,"
"usually the sign of a broken io.Reader implementation."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:42:25
msgid ""
"Reader is the interface that wraps the basic Read method."
"\n"
"Read reads up to len(p) bytes into p.  It returns the number of bytes"
"read (0 <= n <= len(p)) and any error encountered.  Even if Read"
"returns n < len(p), it may use all of p as scratch space during the call."
"If some data is available but not len(p) bytes, Read conventionally"
"returns what is available instead of waiting for more."
"\n"
"When Read encounters an error or end-of-file condition after"
"successfully reading n > 0 bytes, it returns the number of"
"bytes read.  It may return the (non-nil) error from the same call"
"or return the error (and n == 0) from a subsequent call."
"An instance of this general case is that a Reader returning"
"a non-zero number of bytes at the end of the input stream may"
"return either err == EOF or err == nil.  The next Read should"
"return 0, EOF regardless."
"\n"
"Callers should always process the n > 0 bytes returned before"
"considering the error err.  Doing so correctly handles I/O errors"
"that happen after reading some bytes and also both of the"
"allowed EOF behaviors."
"\n"
"Implementations of Read are discouraged from returning a"
"zero byte count with a nil error, and callers should treat"
"that situation as a no-op."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:71:7
msgid ""
"Writer is the interface that wraps the basic Write method."
"\n"
"Write writes len(p) bytes from p to the underlying data stream."
"It returns the number of bytes written from p (0 <= n <= len(p))"
"and any error encountered that caused the write to stop early."
"Write must return a non-nil error if it returns n < len(p)."
"Write must not modify the slice data, even temporarily."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:82:4
msgid ""
"Closer is the interface that wraps the basic Close method."
"\n"
"The behavior of Close after the first call is undefined."
"Specific implementations may document their own behavior."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:90:11
msgid ""
"Seeker is the interface that wraps the basic Seek method."
"\n"
"Seek sets the offset for the next Read or Write to offset,"
"interpreted according to whence: 0 means relative to the origin of"
"the file, 1 means relative to the current offset, and 2 means"
"relative to the end.  Seek returns the new offset and an error, if"
"any."
"\n"
"Seeking to a negative offset is an error. Seeking to any positive"
"offset is legal, but the behavior of subsequent I/O operations on"
"the underlying object is implementation-dependent."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:105:1
msgid ""
"ReadWriter is the interface that groups the basic Read and Write methods."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:111:1
msgid ""
"ReadCloser is the interface that groups the basic Read and Close methods."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:117:1
msgid ""
"WriteCloser is the interface that groups the basic Write and Close methods."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:123:1
msgid ""
"ReadWriteCloser is the interface that groups the basic Read, Write and Close methods."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:130:1
msgid ""
"ReadSeeker is the interface that groups the basic Read and Seek methods."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:136:1
msgid ""
"WriteSeeker is the interface that groups the basic Write and Seek methods."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:142:1
msgid ""
"ReadWriteSeeker is the interface that groups the basic Read, Write and Seek methods."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:149:7
msgid ""
"ReaderFrom is the interface that wraps the ReadFrom method."
"\n"
"ReadFrom reads data from r until EOF or error."
"The return value n is the number of bytes read."
"Any error except io.EOF encountered during the read is also returned."
"\n"
"The Copy function uses ReaderFrom if available."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:160:7
msgid ""
"WriterTo is the interface that wraps the WriteTo method."
"\n"
"WriteTo writes data to w until there's no more data to write or"
"when an error occurs. The return value n is the number of bytes"
"written. Any error encountered during the write is also returned."
"\n"
"The Copy function uses WriterTo if available."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:171:24
msgid ""
"ReaderAt is the interface that wraps the basic ReadAt method."
"\n"
"ReadAt reads len(p) bytes into p starting at offset off in the"
"underlying input source.  It returns the number of bytes"
"read (0 <= n <= len(p)) and any error encountered."
"\n"
"When ReadAt returns n < len(p), it returns a non-nil error"
"explaining why more bytes were not returned.  In this respect,"
"ReadAt is stricter than Read."
"\n"
"Even if ReadAt returns n < len(p), it may use all of p as scratch"
"space during the call.  If some data is available but not len(p) bytes,"
"ReadAt blocks until either all the data is available or an error occurs."
"In this respect ReadAt is different from Read."
"\n"
"If the n = len(p) bytes returned by ReadAt are at the end of the"
"input source, ReadAt may return either err == EOF or err == nil."
"\n"
"If ReadAt is reading from an input source with a seek offset,"
"ReadAt should not affect nor be affected by the underlying"
"seek offset."
"\n"
"Clients of ReadAt can execute parallel ReadAt calls on the"
"same input source."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:199:13
msgid ""
"WriterAt is the interface that wraps the basic WriteAt method."
"\n"
"WriteAt writes len(p) bytes from p to the underlying data stream"
"at offset off.  It returns the number of bytes written from p (0 <= n <= len(p))"
"and any error encountered that caused the write to stop early."
"WriteAt must return a non-nil error if it returns n < len(p)."
"\n"
"If WriteAt is writing to a destination with a seek offset,"
"WriteAt should not affect nor be affected by the underlying"
"seek offset."
"\n"
"Clients of WriteAt can execute parallel WriteAt calls on the same"
"destination if the ranges do not overlap."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:216:4
msgid ""
"ByteReader is the interface that wraps the ReadByte method."
"\n"
"ReadByte reads and returns the next byte from the input."
"If no byte is available, err will be set."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:224:7
msgid ""
"ByteScanner is the interface that adds the UnreadByte method to the"
"basic ReadByte method."
"\n"
"UnreadByte causes the next call to ReadByte to return the same byte"
"as the previous call to ReadByte."
"It may be an error to call UnreadByte twice without an intervening"
"call to ReadByte."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:236:1
msgid ""
"ByteWriter is the interface that wraps the WriteByte method."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:241:5
msgid ""
"RuneReader is the interface that wraps the ReadRune method."
"\n"
"ReadRune reads a single UTF-8 encoded Unicode character"
"and returns the rune and its size in bytes. If no character is"
"available, err will be set."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:250:7
msgid ""
"RuneScanner is the interface that adds the UnreadRune method to the"
"basic ReadRune method."
"\n"
"UnreadRune causes the next call to ReadRune to return the same rune"
"as the previous call to ReadRune."
"It may be an error to call UnreadRune twice without an intervening"
"call to ReadRune."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:262:1
msgid ""
"stringWriter is the interface that wraps the WriteString method."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:267:2
msgid ""
"WriteString writes the contents of the string s to w, which accepts an array of bytes."
"If w already implements a WriteString method, it is invoked directly."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:276:7
msgid ""
"ReadAtLeast reads from r into buf until it has read at least min bytes."
"It returns the number of bytes copied and an error if fewer bytes were read."
"The error is EOF only if no bytes were read."
"If an EOF happens after reading fewer than min bytes,"
"ReadAtLeast returns ErrUnexpectedEOF."
"If min is greater than the length of buf, ReadAtLeast returns ErrShortBuffer."
"On return, n >= min if and only if err == nil."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:300:6
msgid ""
"ReadFull reads exactly len(buf) bytes from r into buf."
"It returns the number of bytes copied and an error if fewer bytes were read."
"The error is EOF only if no bytes were read."
"If an EOF happens after reading some but not all the bytes,"
"ReadFull returns ErrUnexpectedEOF."
"On return, n == len(buf) if and only if err == nil."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:310:7
msgid ""
"CopyN copies n bytes (or until an error) from src to dst."
"It returns the number of bytes copied and the earliest"
"error encountered while copying."
"On return, written == n if and only if err == nil."
"\n"
"If dst implements the ReaderFrom interface,"
"the copy is implemented using it."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:323:1
msgid ""
"src stopped early; must have been EOF."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:329:12
msgid ""
"Copy copies from src to dst until either EOF is reached"
"on src or an error occurs.  It returns the number of bytes"
"copied and the first error encountered while copying, if any."
"\n"
"A successful Copy returns err == nil, not err == EOF."
"Because Copy is defined to read from src until EOF, it does"
"not treat an EOF from Read as an error to be reported."
"\n"
"If src implements the WriterTo interface,"
"the copy is implemented by calling src.WriteTo(dst)."
"Otherwise, if dst implements the ReaderFrom interface,"
"the copy is implemented by calling dst.ReadFrom(src)."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:342:2
msgid ""
"If the reader has a WriteTo method, use it to do the copy."
"Avoids an allocation and a copy."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:347:1
msgid ""
"Similarly, if the writer has a ReadFrom method, use it to do the copy."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:379:3
msgid ""
"LimitReader returns a Reader that reads from r"
"but stops with EOF after n bytes."
"The underlying implementation is a *LimitedReader."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:384:3
msgid ""
"A LimitedReader reads from R but limits the amount of"
"data returned to just N bytes. Each call to Read"
"updates N to reflect the new amount remaining."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:388:1
msgid ""
"underlying reader"
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:389:1
msgid ""
"max bytes remaining"
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:404:2
msgid ""
"NewSectionReader returns a SectionReader that reads from r"
"starting at offset off and stops with EOF after n bytes."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:410:2
msgid ""
"SectionReader implements Read, Seek, and ReadAt on a section"
"of an underlying ReaderAt."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:468:1
msgid ""
"Size returns the size of the section in bytes."
msgstr ""

#. used by: func Hi:
#: go1.3/io.go:471:5
msgid ""
"TeeReader returns a Reader that writes to w what it reads from r."
"All reads from r performed through it are matched with"
"corresponding writes to w.  There is no internal buffering -"
"the write must complete before the read completes."
"Any error encountered while writing is reported as a read error."
msgstr "翻译测试"
